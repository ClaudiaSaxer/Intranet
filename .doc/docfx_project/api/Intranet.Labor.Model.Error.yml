### YamlMime:ManagedReference
items:
- uid: Intranet.Labor.Model.Error
  commentId: T:Intranet.Labor.Model.Error
  id: Error
  parent: Intranet.Labor.Model
  children:
  - Intranet.Labor.Model.Error.ErrorCode
  - Intranet.Labor.Model.Error.ErrorId
  - Intranet.Labor.Model.Error.TestNotes
  - Intranet.Labor.Model.Error.Value
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: Error
  fullName: Intranet.Labor.Model.Error
  type: Class
  source:
    remote:
      path: .src/Intranet/Labor/Model/intigena/Error.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: Error
    path: .src/Intranet/Labor/Model/intigena/Error.cs
    startLine: 11
  assemblies:
  - Intranet.Labor.Model
  namespace: Intranet.Labor.Model
  summary: "\nClass representing Errors\n"
  example: []
  syntax:
    content: public class Error
    content.vb: Public Class Error
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Intranet.Labor.Model.Error.ErrorId
  commentId: P:Intranet.Labor.Model.Error.ErrorId
  id: ErrorId
  parent: Intranet.Labor.Model.Error
  langs:
  - csharp
  - vb
  name: ErrorId
  nameWithType: Error.ErrorId
  fullName: Intranet.Labor.Model.Error.ErrorId
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/Model/intigena/Error.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ErrorId
    path: .src/Intranet/Labor/Model/intigena/Error.cs
    startLine: 19
  assemblies:
  - Intranet.Labor.Model
  namespace: Intranet.Labor.Model
  summary: "\nGets or sets the id of the error\n"
  example: []
  syntax:
    content: >-
      [Key]

      [DatabaseGenerated(DatabaseGeneratedOption.Identity)]

      public int ErrorId { get; set; }
    content.vb: >-
      <Key>

      <DatabaseGenerated(DatabaseGeneratedOption.Identity)>

      Public Property ErrorId As Integer
    parameters: []
    return:
      type: System.Int32
      description: the id of the error
  overload: Intranet.Labor.Model.Error.ErrorId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.Model.Error.ErrorCode
  commentId: P:Intranet.Labor.Model.Error.ErrorCode
  id: ErrorCode
  parent: Intranet.Labor.Model.Error
  langs:
  - csharp
  - vb
  name: ErrorCode
  nameWithType: Error.ErrorCode
  fullName: Intranet.Labor.Model.Error.ErrorCode
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/Model/intigena/Error.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ErrorCode
    path: .src/Intranet/Labor/Model/intigena/Error.cs
    startLine: 27
  assemblies:
  - Intranet.Labor.Model
  namespace: Intranet.Labor.Model
  summary: "\nGets or sets the value of the error Code\n"
  example: []
  syntax:
    content: public string ErrorCode { get; set; }
    content.vb: Public Property ErrorCode As String
    parameters: []
    return:
      type: System.String
      description: the value of the error code
  overload: Intranet.Labor.Model.Error.ErrorCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.Model.Error.Value
  commentId: P:Intranet.Labor.Model.Error.Value
  id: Value
  parent: Intranet.Labor.Model.Error
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Error.Value
  fullName: Intranet.Labor.Model.Error.Value
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/Model/intigena/Error.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: Value
    path: .src/Intranet/Labor/Model/intigena/Error.cs
    startLine: 33
  assemblies:
  - Intranet.Labor.Model
  namespace: Intranet.Labor.Model
  summary: "\nGets or sets the value of the error\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: the value or a description of the error
  overload: Intranet.Labor.Model.Error.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.Model.Error.TestNotes
  commentId: P:Intranet.Labor.Model.Error.TestNotes
  id: TestNotes
  parent: Intranet.Labor.Model.Error
  langs:
  - csharp
  - vb
  name: TestNotes
  nameWithType: Error.TestNotes
  fullName: Intranet.Labor.Model.Error.TestNotes
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/Model/intigena/Error.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: TestNotes
    path: .src/Intranet/Labor/Model/intigena/Error.cs
    startLine: 39
  assemblies:
  - Intranet.Labor.Model
  namespace: Intranet.Labor.Model
  summary: "\nGets or sets the test notes existing with this error\n"
  example: []
  syntax:
    content: public ICollection<TestValueNote> TestNotes { get; set; }
    content.vb: Public Property TestNotes As ICollection(Of TestValueNote)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.Model.labor.TestValueNote}
      description: the test notes with this error
  overload: Intranet.Labor.Model.Error.TestNotes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Intranet.Labor.Model
  commentId: N:Intranet.Labor.Model
  isExternal: false
  name: Intranet.Labor.Model
  nameWithType: Intranet.Labor.Model
  fullName: Intranet.Labor.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Labor.Model.Error.ErrorId*
  commentId: Overload:Intranet.Labor.Model.Error.ErrorId
  isExternal: false
  name: ErrorId
  nameWithType: Error.ErrorId
  fullName: Intranet.Labor.Model.Error.ErrorId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Intranet.Labor.Model.Error.ErrorCode*
  commentId: Overload:Intranet.Labor.Model.Error.ErrorCode
  isExternal: false
  name: ErrorCode
  nameWithType: Error.ErrorCode
  fullName: Intranet.Labor.Model.Error.ErrorCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Intranet.Labor.Model.Error.Value*
  commentId: Overload:Intranet.Labor.Model.Error.Value
  isExternal: false
  name: Value
  nameWithType: Error.Value
  fullName: Intranet.Labor.Model.Error.Value
- uid: Intranet.Labor.Model.Error.TestNotes*
  commentId: Overload:Intranet.Labor.Model.Error.TestNotes
  isExternal: false
  name: TestNotes
  nameWithType: Error.TestNotes
  fullName: Intranet.Labor.Model.Error.TestNotes
- uid: System.Collections.Generic.ICollection{Intranet.Labor.Model.labor.TestValueNote}
  commentId: T:System.Collections.Generic.ICollection{Intranet.Labor.Model.labor.TestValueNote}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TestValueNote>
  nameWithType: ICollection<TestValueNote>
  fullName: System.Collections.Generic.ICollection<Intranet.Labor.Model.labor.TestValueNote>
  nameWithType.vb: ICollection(Of TestValueNote)
  fullname.vb: System.Collections.Generic.ICollection(Of Intranet.Labor.Model.labor.TestValueNote)
  name.vb: ICollection(Of TestValueNote)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Intranet.Labor.Model.labor.TestValueNote
    name: TestValueNote
    nameWithType: TestValueNote
    fullName: Intranet.Labor.Model.labor.TestValueNote
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Intranet.Labor.Model.labor.TestValueNote
    name: TestValueNote
    nameWithType: TestValueNote
    fullName: Intranet.Labor.Model.labor.TestValueNote
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
