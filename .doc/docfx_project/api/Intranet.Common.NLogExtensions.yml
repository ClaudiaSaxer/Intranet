### YamlMime:ManagedReference
items:
- uid: Intranet.Common.NLogExtensions
  commentId: T:Intranet.Common.NLogExtensions
  id: NLogExtensions
  parent: Intranet.Common
  children:
  - Intranet.Common.NLogExtensions.ToLogLevel(Intranet.Common.LogLevel)
  langs:
  - csharp
  - vb
  name: NLogExtensions
  nameWithType: NLogExtensions
  fullName: Intranet.Common.NLogExtensions
  type: Class
  source:
    remote:
      path: .src/Intranet/Common/Logging/NLogExtesions.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: NLogExtensions
    path: .src/Intranet/Common/Logging/NLogExtesions.cs
    startLine: 11
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nClass containing all NLog extensions\n"
  example: []
  syntax:
    content: public static class NLogExtensions
    content.vb: Public Module NLogExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Intranet.Common.NLogExtensions.ToLogLevel(Intranet.Common.LogLevel)
  commentId: M:Intranet.Common.NLogExtensions.ToLogLevel(Intranet.Common.LogLevel)
  id: ToLogLevel(Intranet.Common.LogLevel)
  isExtensionMethod: true
  parent: Intranet.Common.NLogExtensions
  langs:
  - csharp
  - vb
  name: ToLogLevel(LogLevel)
  nameWithType: NLogExtensions.ToLogLevel(LogLevel)
  fullName: Intranet.Common.NLogExtensions.ToLogLevel(Intranet.Common.LogLevel)
  type: Method
  source:
    remote:
      path: .src/Intranet/Common/Logging/NLogExtesions.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ToLogLevel
    path: .src/Intranet/Common/Logging/NLogExtesions.cs
    startLine: 19
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nConvert a <xref href=\"Intranet.Common.LogLevel\" data-throw-if-not-resolved=\"false\"></xref> value to a <xref href=\"NLog.LogLevel\" data-throw-if-not-resolved=\"false\"></xref> value\n"
  example: []
  syntax:
    content: public static LogLevel ToLogLevel(this LogLevel level)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToLogLevel(level As LogLevel) As LogLevel
    parameters:
    - id: level
      type: Intranet.Common.LogLevel
      description: The level to convert
    return:
      type: NLog.LogLevel
      description: The converted NLog value
  overload: Intranet.Common.NLogExtensions.ToLogLevel*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: level is out of range.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Intranet.Common
  commentId: N:Intranet.Common
  isExternal: false
  name: Intranet.Common
  nameWithType: Intranet.Common
  fullName: Intranet.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Common.LogLevel
  commentId: T:Intranet.Common.LogLevel
  parent: Intranet.Common
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Intranet.Common.LogLevel
- uid: NLog.LogLevel
  commentId: T:NLog.LogLevel
  parent: NLog
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: NLog.LogLevel
- uid: Intranet.Common.NLogExtensions.ToLogLevel*
  commentId: Overload:Intranet.Common.NLogExtensions.ToLogLevel
  isExternal: false
  name: ToLogLevel
  nameWithType: NLogExtensions.ToLogLevel
  fullName: Intranet.Common.NLogExtensions.ToLogLevel
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: NLog
  commentId: N:NLog
  isExternal: false
  name: NLog
  nameWithType: NLog
  fullName: NLog
