### YamlMime:ManagedReference
items:
- uid: Intranet.Common.IRoles
  commentId: T:Intranet.Common.IRoles
  id: IRoles
  parent: Intranet.Common
  children:
  - Intranet.Common.IRoles.CanUserEditLabor
  - Intranet.Common.IRoles.GetRolesForUser
  langs:
  - csharp
  - vb
  name: IRoles
  nameWithType: IRoles
  fullName: Intranet.Common.IRoles
  type: Interface
  source:
    remote:
      path: .src/Intranet/Common/Role/Definition/IRoles.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: IRoles
    path: .src/Intranet/Common/Role/Definition/IRoles.cs
    startLine: 12
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nFactory for Roles\n"
  example: []
  syntax:
    content: public interface IRoles
    content.vb: Public Interface IRoles
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Intranet.Common.IRoles.CanUserEditLabor
  commentId: M:Intranet.Common.IRoles.CanUserEditLabor
  id: CanUserEditLabor
  parent: Intranet.Common.IRoles
  langs:
  - csharp
  - vb
  name: CanUserEditLabor()
  nameWithType: IRoles.CanUserEditLabor()
  fullName: Intranet.Common.IRoles.CanUserEditLabor()
  type: Method
  source:
    remote:
      path: .src/Intranet/Common/Role/Definition/IRoles.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: CanUserEditLabor
    path: .src/Intranet/Common/Role/Definition/IRoles.cs
    startLine: 18
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nComputes if the user can Edit Labor\n"
  example: []
  syntax:
    content: bool CanUserEditLabor()
    content.vb: Function CanUserEditLabor As Boolean
    return:
      type: System.Boolean
      description: 'true: if the current user is allowed to edit the labor'
  overload: Intranet.Common.IRoles.CanUserEditLabor*
- uid: Intranet.Common.IRoles.GetRolesForUser
  commentId: M:Intranet.Common.IRoles.GetRolesForUser
  id: GetRolesForUser
  parent: Intranet.Common.IRoles
  langs:
  - csharp
  - vb
  name: GetRolesForUser()
  nameWithType: IRoles.GetRolesForUser()
  fullName: Intranet.Common.IRoles.GetRolesForUser()
  type: Method
  source:
    remote:
      path: .src/Intranet/Common/Role/Definition/IRoles.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: GetRolesForUser
    path: .src/Intranet/Common/Role/Definition/IRoles.cs
    startLine: 24
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nThe Roles for the current User\n"
  example: []
  syntax:
    content: IEnumerable<string> GetRolesForUser()
    content.vb: Function GetRolesForUser As IEnumerable(Of String)
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: the current user roles
  overload: Intranet.Common.IRoles.GetRolesForUser*
references:
- uid: Intranet.Common
  commentId: N:Intranet.Common
  isExternal: false
  name: Intranet.Common
  nameWithType: Intranet.Common
  fullName: Intranet.Common
- uid: Intranet.Common.IRoles.CanUserEditLabor*
  commentId: Overload:Intranet.Common.IRoles.CanUserEditLabor
  isExternal: false
  name: CanUserEditLabor
  nameWithType: IRoles.CanUserEditLabor
  fullName: Intranet.Common.IRoles.CanUserEditLabor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Common.IRoles.GetRolesForUser*
  commentId: Overload:Intranet.Common.IRoles.GetRolesForUser
  isExternal: false
  name: GetRolesForUser
  nameWithType: IRoles.GetRolesForUser
  fullName: Intranet.Common.IRoles.GetRolesForUser
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
