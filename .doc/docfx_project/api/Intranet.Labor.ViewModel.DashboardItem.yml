### YamlMime:ManagedReference
items:
- uid: Intranet.Labor.ViewModel.DashboardItem
  commentId: T:Intranet.Labor.ViewModel.DashboardItem
  id: DashboardItem
  parent: Intranet.Labor.ViewModel
  children:
  - Intranet.Labor.ViewModel.DashboardItem.MachineName
  - Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent
  - Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1
  - Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2
  - Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3
  langs:
  - csharp
  - vb
  name: DashboardItem
  nameWithType: DashboardItem
  fullName: Intranet.Labor.ViewModel.DashboardItem
  type: Class
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: DashboardItem
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
    startLine: 12
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nClass representing a Dashboard Item\n"
  example: []
  syntax:
    content: public class DashboardItem
    content.vb: Public Class DashboardItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Intranet.Labor.ViewModel.DashboardItem.MachineName
  commentId: P:Intranet.Labor.ViewModel.DashboardItem.MachineName
  id: MachineName
  parent: Intranet.Labor.ViewModel.DashboardItem
  langs:
  - csharp
  - vb
  name: MachineName
  nameWithType: DashboardItem.MachineName
  fullName: Intranet.Labor.ViewModel.DashboardItem.MachineName
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: MachineName
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
    startLine: 20
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the name of the machine\n"
  example: []
  syntax:
    content: public string MachineName { get; set; }
    content.vb: Public Property MachineName As String
    parameters: []
    return:
      type: System.String
      description: the name of the machine
  overload: Intranet.Labor.ViewModel.DashboardItem.MachineName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent
  commentId: P:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent
  id: ShiftItemsCurrent
  parent: Intranet.Labor.ViewModel.DashboardItem
  langs:
  - csharp
  - vb
  name: ShiftItemsCurrent
  nameWithType: DashboardItem.ShiftItemsCurrent
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ShiftItemsCurrent
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
    startLine: 26
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the production order items current\n"
  example: []
  syntax:
    content: public ICollection<ProductionOrderItem> ShiftItemsCurrent { get; set; }
    content.vb: Public Property ShiftItemsCurrent As ICollection(Of ProductionOrderItem)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.ProductionOrderItem}
      description: the production order items
  overload: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1
  commentId: P:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1
  id: ShiftItemsMinus1
  parent: Intranet.Labor.ViewModel.DashboardItem
  langs:
  - csharp
  - vb
  name: ShiftItemsMinus1
  nameWithType: DashboardItem.ShiftItemsMinus1
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ShiftItemsMinus1
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
    startLine: 32
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the production order items minus 1\n"
  example: []
  syntax:
    content: public ICollection<ProductionOrderItem> ShiftItemsMinus1 { get; set; }
    content.vb: Public Property ShiftItemsMinus1 As ICollection(Of ProductionOrderItem)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.ProductionOrderItem}
      description: the production order items
  overload: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2
  commentId: P:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2
  id: ShiftItemsMinus2
  parent: Intranet.Labor.ViewModel.DashboardItem
  langs:
  - csharp
  - vb
  name: ShiftItemsMinus2
  nameWithType: DashboardItem.ShiftItemsMinus2
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ShiftItemsMinus2
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
    startLine: 38
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the production order items minus 2\n"
  example: []
  syntax:
    content: public ICollection<ProductionOrderItem> ShiftItemsMinus2 { get; set; }
    content.vb: Public Property ShiftItemsMinus2 As ICollection(Of ProductionOrderItem)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.ProductionOrderItem}
      description: the production order items
  overload: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3
  commentId: P:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3
  id: ShiftItemsMinus3
  parent: Intranet.Labor.ViewModel.DashboardItem
  langs:
  - csharp
  - vb
  name: ShiftItemsMinus3
  nameWithType: DashboardItem.ShiftItemsMinus3
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ShiftItemsMinus3
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/DashboardItem.cs
    startLine: 44
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the production order items minus 3\n"
  example: []
  syntax:
    content: public ICollection<ProductionOrderItem> ShiftItemsMinus3 { get; set; }
    content.vb: Public Property ShiftItemsMinus3 As ICollection(Of ProductionOrderItem)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.ProductionOrderItem}
      description: the production order items
  overload: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Intranet.Labor.ViewModel
  commentId: N:Intranet.Labor.ViewModel
  isExternal: false
  name: Intranet.Labor.ViewModel
  nameWithType: Intranet.Labor.ViewModel
  fullName: Intranet.Labor.ViewModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Labor.ViewModel.DashboardItem.MachineName*
  commentId: Overload:Intranet.Labor.ViewModel.DashboardItem.MachineName
  isExternal: false
  name: MachineName
  nameWithType: DashboardItem.MachineName
  fullName: Intranet.Labor.ViewModel.DashboardItem.MachineName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent*
  commentId: Overload:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent
  isExternal: false
  name: ShiftItemsCurrent
  nameWithType: DashboardItem.ShiftItemsCurrent
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsCurrent
- uid: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.ProductionOrderItem}
  commentId: T:System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.ProductionOrderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ProductionOrderItem>
  nameWithType: ICollection<ProductionOrderItem>
  fullName: System.Collections.Generic.ICollection<Intranet.Labor.ViewModel.ProductionOrderItem>
  nameWithType.vb: ICollection(Of ProductionOrderItem)
  fullname.vb: System.Collections.Generic.ICollection(Of Intranet.Labor.ViewModel.ProductionOrderItem)
  name.vb: ICollection(Of ProductionOrderItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Intranet.Labor.ViewModel.ProductionOrderItem
    name: ProductionOrderItem
    nameWithType: ProductionOrderItem
    fullName: Intranet.Labor.ViewModel.ProductionOrderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Intranet.Labor.ViewModel.ProductionOrderItem
    name: ProductionOrderItem
    nameWithType: ProductionOrderItem
    fullName: Intranet.Labor.ViewModel.ProductionOrderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1*
  commentId: Overload:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1
  isExternal: false
  name: ShiftItemsMinus1
  nameWithType: DashboardItem.ShiftItemsMinus1
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus1
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2*
  commentId: Overload:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2
  isExternal: false
  name: ShiftItemsMinus2
  nameWithType: DashboardItem.ShiftItemsMinus2
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus2
- uid: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3*
  commentId: Overload:Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3
  isExternal: false
  name: ShiftItemsMinus3
  nameWithType: DashboardItem.ShiftItemsMinus3
  fullName: Intranet.Labor.ViewModel.DashboardItem.ShiftItemsMinus3
