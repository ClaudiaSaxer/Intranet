### YamlMime:ManagedReference
items:
- uid: Intranet.Labor.ViewModel.ProductionOrderItem
  commentId: T:Intranet.Labor.ViewModel.ProductionOrderItem
  id: ProductionOrderItem
  parent: Intranet.Labor.ViewModel
  children:
  - Intranet.Labor.ViewModel.ProductionOrderItem.Action
  - Intranet.Labor.ViewModel.ProductionOrderItem.Controller
  - Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos
  - Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes
  - Intranet.Labor.ViewModel.ProductionOrderItem.Notes
  - Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName
  - Intranet.Labor.ViewModel.ProductionOrderItem.RwType
  - Intranet.Labor.ViewModel.ProductionOrderItem.SheetId
  langs:
  - csharp
  - vb
  name: ProductionOrderItem
  nameWithType: ProductionOrderItem
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem
  type: Class
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ProductionOrderItem
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 13
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nClass representing a item for the production order\n"
  example: []
  syntax:
    content: public class ProductionOrderItem
    content.vb: Public Class ProductionOrderItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName
  id: ProductionOrderName
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: ProductionOrderName
  nameWithType: ProductionOrderItem.ProductionOrderName
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ProductionOrderName
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 21
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the production order name\n"
  example: []
  syntax:
    content: public string ProductionOrderName { get; set; }
    content.vb: Public Property ProductionOrderName As String
    parameters: []
    return:
      type: System.String
      description: the production order name
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.SheetId
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.SheetId
  id: SheetId
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: SheetId
  nameWithType: ProductionOrderItem.SheetId
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.SheetId
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: SheetId
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 26
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the id of the sheet\n"
  example: []
  syntax:
    content: public int SheetId { get; set; }
    content.vb: Public Property SheetId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.SheetId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.RwType
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.RwType
  id: RwType
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: RwType
  nameWithType: ProductionOrderItem.RwType
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.RwType
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: RwType
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 32
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the rw type, telling if something is wrong.\n"
  example: []
  syntax:
    content: public RwType RwType { get; set; }
    content.vb: Public Property RwType As RwType
    parameters: []
    return:
      type: Intranet.Labor.Model.RwType
      description: seths the type
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.RwType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes
  id: HasNotes
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: HasNotes
  nameWithType: ProductionOrderItem.HasNotes
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: HasNotes
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 38
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets if the production order has existing notes\n"
  example: []
  syntax:
    content: public bool HasNotes { get; set; }
    content.vb: Public Property HasNotes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: if the production order has existing notes
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.Notes
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.Notes
  id: Notes
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: Notes
  nameWithType: ProductionOrderItem.Notes
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.Notes
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: Notes
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 44
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets a Collection of Notes\n"
  example: []
  syntax:
    content: public ICollection<DashboardNote> Notes { get; set; }
    content.vb: Public Property Notes As ICollection(Of DashboardNote)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.DashboardNote}
      description: the notes
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.Notes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.Controller
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.Controller
  id: Controller
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: ProductionOrderItem.Controller
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.Controller
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: Controller
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 50
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the controller for more details\n"
  example: []
  syntax:
    content: public string Controller { get; set; }
    content.vb: Public Property Controller As String
    parameters: []
    return:
      type: System.String
      description: the controller for more detail
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.Controller*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.Action
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.Action
  id: Action
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: ProductionOrderItem.Action
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.Action
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: Action
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 56
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the action for more detail\n"
  example: []
  syntax:
    content: public string Action { get; set; }
    content.vb: Public Property Action As String
    parameters: []
    return:
      type: System.String
      description: the action for more detail
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.Action*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos
  commentId: P:Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos
  id: DashboardInfos
  parent: Intranet.Labor.ViewModel.ProductionOrderItem
  langs:
  - csharp
  - vb
  name: DashboardInfos
  nameWithType: ProductionOrderItem.DashboardInfos
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: DashboardInfos
    path: .src/Intranet/Labor/ViewModel/LaborDashboard/ProductionOrderItem.cs
    startLine: 62
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the additional dashboard infor\n"
  example: []
  syntax:
    content: public ICollection<DashboardInfo> DashboardInfos { get; set; }
    content.vb: Public Property DashboardInfos As ICollection(Of DashboardInfo)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.DashboardInfo}
      description: the dashboard info
  overload: Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Intranet.Labor.ViewModel
  commentId: N:Intranet.Labor.ViewModel
  isExternal: false
  name: Intranet.Labor.ViewModel
  nameWithType: Intranet.Labor.ViewModel
  fullName: Intranet.Labor.ViewModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName
  isExternal: false
  name: ProductionOrderName
  nameWithType: ProductionOrderItem.ProductionOrderName
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.ProductionOrderName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.SheetId*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.SheetId
  isExternal: false
  name: SheetId
  nameWithType: ProductionOrderItem.SheetId
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.SheetId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.RwType*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.RwType
  isExternal: false
  name: RwType
  nameWithType: ProductionOrderItem.RwType
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.RwType
- uid: Intranet.Labor.Model.RwType
  commentId: T:Intranet.Labor.Model.RwType
  parent: Intranet.Labor.Model
  isExternal: false
  name: RwType
  nameWithType: RwType
  fullName: Intranet.Labor.Model.RwType
- uid: Intranet.Labor.Model
  commentId: N:Intranet.Labor.Model
  isExternal: false
  name: Intranet.Labor.Model
  nameWithType: Intranet.Labor.Model
  fullName: Intranet.Labor.Model
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes
  isExternal: false
  name: HasNotes
  nameWithType: ProductionOrderItem.HasNotes
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.HasNotes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.Notes*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.Notes
  isExternal: false
  name: Notes
  nameWithType: ProductionOrderItem.Notes
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.Notes
- uid: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.DashboardNote}
  commentId: T:System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.DashboardNote}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<DashboardNote>
  nameWithType: ICollection<DashboardNote>
  fullName: System.Collections.Generic.ICollection<Intranet.Labor.ViewModel.DashboardNote>
  nameWithType.vb: ICollection(Of DashboardNote)
  fullname.vb: System.Collections.Generic.ICollection(Of Intranet.Labor.ViewModel.DashboardNote)
  name.vb: ICollection(Of DashboardNote)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Intranet.Labor.ViewModel.DashboardNote
    name: DashboardNote
    nameWithType: DashboardNote
    fullName: Intranet.Labor.ViewModel.DashboardNote
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Intranet.Labor.ViewModel.DashboardNote
    name: DashboardNote
    nameWithType: DashboardNote
    fullName: Intranet.Labor.ViewModel.DashboardNote
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.Controller*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.Controller
  isExternal: false
  name: Controller
  nameWithType: ProductionOrderItem.Controller
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.Controller
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.Action*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.Action
  isExternal: false
  name: Action
  nameWithType: ProductionOrderItem.Action
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.Action
- uid: Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos*
  commentId: Overload:Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos
  isExternal: false
  name: DashboardInfos
  nameWithType: ProductionOrderItem.DashboardInfos
  fullName: Intranet.Labor.ViewModel.ProductionOrderItem.DashboardInfos
- uid: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.DashboardInfo}
  commentId: T:System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.DashboardInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<DashboardInfo>
  nameWithType: ICollection<DashboardInfo>
  fullName: System.Collections.Generic.ICollection<Intranet.Labor.ViewModel.DashboardInfo>
  nameWithType.vb: ICollection(Of DashboardInfo)
  fullname.vb: System.Collections.Generic.ICollection(Of Intranet.Labor.ViewModel.DashboardInfo)
  name.vb: ICollection(Of DashboardInfo)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Intranet.Labor.ViewModel.DashboardInfo
    name: DashboardInfo
    nameWithType: DashboardInfo
    fullName: Intranet.Labor.ViewModel.DashboardInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Intranet.Labor.ViewModel.DashboardInfo
    name: DashboardInfo
    nameWithType: DashboardInfo
    fullName: Intranet.Labor.ViewModel.DashboardInfo
  - name: )
    nameWithType: )
    fullName: )
