### YamlMime:ManagedReference
items:
- uid: Intranet.Common.SystemWebSecurityRoles
  commentId: T:Intranet.Common.SystemWebSecurityRoles
  id: SystemWebSecurityRoles
  parent: Intranet.Common
  children:
  - Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor
  - Intranet.Common.SystemWebSecurityRoles.GetRolesForUser
  langs:
  - csharp
  - vb
  name: SystemWebSecurityRoles
  nameWithType: SystemWebSecurityRoles
  fullName: Intranet.Common.SystemWebSecurityRoles
  type: Class
  source:
    remote:
      path: .src/Intranet/Common/Role/SystemWebSecurityRoles.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: SystemWebSecurityRoles
    path: .src/Intranet/Common/Role/SystemWebSecurityRoles.cs
    startLine: 11
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nRoles for System.Web.Security .\n"
  example: []
  syntax:
    content: 'public class SystemWebSecurityRoles : IRoles'
    content.vb: >-
      Public Class SystemWebSecurityRoles
          Implements IRoles
  inheritance:
  - System.Object
  implements:
  - Intranet.Common.IRoles
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Intranet.Common.SystemWebSecurityRoles.GetRolesForUser
  commentId: M:Intranet.Common.SystemWebSecurityRoles.GetRolesForUser
  id: GetRolesForUser
  parent: Intranet.Common.SystemWebSecurityRoles
  langs:
  - csharp
  - vb
  name: GetRolesForUser()
  nameWithType: SystemWebSecurityRoles.GetRolesForUser()
  fullName: Intranet.Common.SystemWebSecurityRoles.GetRolesForUser()
  type: Method
  source:
    remote:
      path: .src/Intranet/Common/Role/SystemWebSecurityRoles.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: GetRolesForUser
    path: .src/Intranet/Common/Role/SystemWebSecurityRoles.cs
    startLine: 19
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nThe Roles for the current User\n"
  example: []
  syntax:
    content: public IEnumerable<string> GetRolesForUser()
    content.vb: Public Function GetRolesForUser As IEnumerable(Of String)
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: the current user roles
  overload: Intranet.Common.SystemWebSecurityRoles.GetRolesForUser*
  implements:
  - Intranet.Common.IRoles.GetRolesForUser
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor
  commentId: M:Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor
  id: CanUserEditLabor
  parent: Intranet.Common.SystemWebSecurityRoles
  langs:
  - csharp
  - vb
  name: CanUserEditLabor()
  nameWithType: SystemWebSecurityRoles.CanUserEditLabor()
  fullName: Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor()
  type: Method
  source:
    remote:
      path: .src/Intranet/Common/Role/SystemWebSecurityRoles.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: CanUserEditLabor
    path: .src/Intranet/Common/Role/SystemWebSecurityRoles.cs
    startLine: 25
  assemblies:
  - Intranet.Common
  namespace: Intranet.Common
  summary: "\nComputes if the user can Edit the Baby Diaper\n"
  example: []
  syntax:
    content: public bool CanUserEditLabor()
    content.vb: Public Function CanUserEditLabor As Boolean
    return:
      type: System.Boolean
      description: ''
  overload: Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor*
  implements:
  - Intranet.Common.IRoles.CanUserEditLabor
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Intranet.Common
  commentId: N:Intranet.Common
  isExternal: false
  name: Intranet.Common
  nameWithType: Intranet.Common
  fullName: Intranet.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Intranet.Common.IRoles
  commentId: T:Intranet.Common.IRoles
  parent: Intranet.Common
  isExternal: false
  name: IRoles
  nameWithType: IRoles
  fullName: Intranet.Common.IRoles
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Common.SystemWebSecurityRoles.GetRolesForUser*
  commentId: Overload:Intranet.Common.SystemWebSecurityRoles.GetRolesForUser
  isExternal: false
  name: GetRolesForUser
  nameWithType: SystemWebSecurityRoles.GetRolesForUser
  fullName: Intranet.Common.SystemWebSecurityRoles.GetRolesForUser
- uid: Intranet.Common.IRoles.GetRolesForUser
  commentId: M:Intranet.Common.IRoles.GetRolesForUser
  parent: Intranet.Common.IRoles
  isExternal: false
  name: GetRolesForUser()
  nameWithType: IRoles.GetRolesForUser()
  fullName: Intranet.Common.IRoles.GetRolesForUser()
  spec.csharp:
  - uid: Intranet.Common.IRoles.GetRolesForUser
    name: GetRolesForUser
    nameWithType: IRoles.GetRolesForUser
    fullName: Intranet.Common.IRoles.GetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Intranet.Common.IRoles.GetRolesForUser
    name: GetRolesForUser
    nameWithType: IRoles.GetRolesForUser
    fullName: Intranet.Common.IRoles.GetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor*
  commentId: Overload:Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor
  isExternal: false
  name: CanUserEditLabor
  nameWithType: SystemWebSecurityRoles.CanUserEditLabor
  fullName: Intranet.Common.SystemWebSecurityRoles.CanUserEditLabor
- uid: Intranet.Common.IRoles.CanUserEditLabor
  commentId: M:Intranet.Common.IRoles.CanUserEditLabor
  parent: Intranet.Common.IRoles
  isExternal: false
  name: CanUserEditLabor()
  nameWithType: IRoles.CanUserEditLabor()
  fullName: Intranet.Common.IRoles.CanUserEditLabor()
  spec.csharp:
  - uid: Intranet.Common.IRoles.CanUserEditLabor
    name: CanUserEditLabor
    nameWithType: IRoles.CanUserEditLabor
    fullName: Intranet.Common.IRoles.CanUserEditLabor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Intranet.Common.IRoles.CanUserEditLabor
    name: CanUserEditLabor
    nameWithType: IRoles.CanUserEditLabor
    fullName: Intranet.Common.IRoles.CanUserEditLabor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
