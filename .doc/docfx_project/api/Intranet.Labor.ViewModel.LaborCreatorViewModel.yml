### YamlMime:ManagedReference
items:
- uid: Intranet.Labor.ViewModel.LaborCreatorViewModel
  commentId: T:Intranet.Labor.ViewModel.LaborCreatorViewModel
  id: LaborCreatorViewModel
  parent: Intranet.Labor.ViewModel
  children:
  - Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo
  - Intranet.Labor.ViewModel.LaborCreatorViewModel.Message
  - Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders
  langs:
  - csharp
  - vb
  name: LaborCreatorViewModel
  nameWithType: LaborCreatorViewModel
  fullName: Intranet.Labor.ViewModel.LaborCreatorViewModel
  type: Class
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: LaborCreatorViewModel
    path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
    startLine: 14
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nClass representing View Model for Labor Creator\n"
  example: []
  syntax:
    content: public class LaborCreatorViewModel
    content.vb: Public Class LaborCreatorViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders
  commentId: P:Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders
  id: ProductionOrders
  parent: Intranet.Labor.ViewModel.LaborCreatorViewModel
  langs:
  - csharp
  - vb
  name: ProductionOrders
  nameWithType: LaborCreatorViewModel.ProductionOrders
  fullName: Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ProductionOrders
    path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
    startLine: 22
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets a collection of running produciton orders\n"
  example: []
  syntax:
    content: public ICollection<RunningProductionOrder> ProductionOrders { get; set; }
    content.vb: Public Property ProductionOrders As ICollection(Of RunningProductionOrder)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.RunningProductionOrder}
      description: running production orders
  overload: Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo
  commentId: P:Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo
  id: ChosenPo
  parent: Intranet.Labor.ViewModel.LaborCreatorViewModel
  langs:
  - csharp
  - vb
  name: ChosenPo
  nameWithType: LaborCreatorViewModel.ChosenPo
  fullName: Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: ChosenPo
    path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
    startLine: 28
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nGets or sets the chosen Production Order\n"
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "Die Fertigungsnummer ist zwingend.")]

      [DataType(DataType.Text, ErrorMessage = "Nummer muss ein Test sein")]

      [StringLength(1024, ErrorMessage = "Fertigungsnummer darf nicht länger als 1024 Zeichen sein.")]

      [MinLength(3, ErrorMessage = "Fertigunsnummer muss mindestens 3 Zeichen lang sein.")]

      [RegularExpression("FA[0-9]*", ErrorMessage = "Fertigungsnummer muss mit FA beginnen und mit Nummern Enden.")]

      public string ChosenPo { get; set; }
    content.vb: >-
      <Required(ErrorMessage:="Die Fertigungsnummer ist zwingend.")>

      <DataType(DataType.Text, ErrorMessage:="Nummer muss ein Test sein")>

      <StringLength(1024, ErrorMessage:="Fertigungsnummer darf nicht länger als 1024 Zeichen sein.")>

      <MinLength(3, ErrorMessage:="Fertigunsnummer muss mindestens 3 Zeichen lang sein.")>

      <RegularExpression("FA[0-9]*", ErrorMessage:="Fertigungsnummer muss mit FA beginnen und mit Nummern Enden.")>

      Public Property ChosenPo As String
    parameters: []
    return:
      type: System.String
      description: the chosen production order
  overload: Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Die Fertigungsnummer ist zwingend.
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 7
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Nummer muss ein Test sein
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1024
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Fertigungsnummer darf nicht länger als 1024 Zeichen sein.
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Fertigunsnummer muss mindestens 3 Zeichen lang sein.
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: FA[0-9]*
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Fertigungsnummer muss mit FA beginnen und mit Nummern Enden.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.ViewModel.LaborCreatorViewModel.Message
  commentId: P:Intranet.Labor.ViewModel.LaborCreatorViewModel.Message
  id: Message
  parent: Intranet.Labor.ViewModel.LaborCreatorViewModel
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: LaborCreatorViewModel.Message
  fullName: Intranet.Labor.ViewModel.LaborCreatorViewModel.Message
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
      branch: dev
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: Message
    path: .src/Intranet/Labor/ViewModel/LaborCreator/LaborCreatorViewModel.cs
    startLine: 39
  assemblies:
  - Intranet.Labor.ViewModel
  namespace: Intranet.Labor.ViewModel
  summary: "\nMessage for User Help Information, Empty if no message available\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    content.vb: Public Property Message As String
    parameters: []
    return:
      type: System.String
  overload: Intranet.Labor.ViewModel.LaborCreatorViewModel.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Intranet.Labor.ViewModel
  commentId: N:Intranet.Labor.ViewModel
  isExternal: false
  name: Intranet.Labor.ViewModel
  nameWithType: Intranet.Labor.ViewModel
  fullName: Intranet.Labor.ViewModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders*
  commentId: Overload:Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders
  isExternal: false
  name: ProductionOrders
  nameWithType: LaborCreatorViewModel.ProductionOrders
  fullName: Intranet.Labor.ViewModel.LaborCreatorViewModel.ProductionOrders
- uid: System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.RunningProductionOrder}
  commentId: T:System.Collections.Generic.ICollection{Intranet.Labor.ViewModel.RunningProductionOrder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<RunningProductionOrder>
  nameWithType: ICollection<RunningProductionOrder>
  fullName: System.Collections.Generic.ICollection<Intranet.Labor.ViewModel.RunningProductionOrder>
  nameWithType.vb: ICollection(Of RunningProductionOrder)
  fullname.vb: System.Collections.Generic.ICollection(Of Intranet.Labor.ViewModel.RunningProductionOrder)
  name.vb: ICollection(Of RunningProductionOrder)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Intranet.Labor.ViewModel.RunningProductionOrder
    name: RunningProductionOrder
    nameWithType: RunningProductionOrder
    fullName: Intranet.Labor.ViewModel.RunningProductionOrder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Intranet.Labor.ViewModel.RunningProductionOrder
    name: RunningProductionOrder
    nameWithType: RunningProductionOrder
    fullName: Intranet.Labor.ViewModel.RunningProductionOrder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo*
  commentId: Overload:Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo
  isExternal: false
  name: ChosenPo
  nameWithType: LaborCreatorViewModel.ChosenPo
  fullName: Intranet.Labor.ViewModel.LaborCreatorViewModel.ChosenPo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Intranet.Labor.ViewModel.LaborCreatorViewModel.Message*
  commentId: Overload:Intranet.Labor.ViewModel.LaborCreatorViewModel.Message
  isExternal: false
  name: Message
  nameWithType: LaborCreatorViewModel.Message
  fullName: Intranet.Labor.ViewModel.LaborCreatorViewModel.Message
