### YamlMime:ManagedReference
items:
- uid: Intranet.Labor.Bll.HistoryBll
  commentId: T:Intranet.Labor.Bll.HistoryBll
  id: HistoryBll
  parent: Intranet.Labor.Bll
  children:
  - Intranet.Labor.Bll.HistoryBll.GetTestSheets(System.String)
  - Intranet.Labor.Bll.HistoryBll.TestSheetRepository
  langs:
  - csharp
  - vb
  name: HistoryBll
  nameWithType: HistoryBll
  fullName: Intranet.Labor.Bll.HistoryBll
  type: Class
  source:
    remote:
      path: .src/Intranet/Labor/Bll/HistoryBll.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: HistoryBll
    path: .src/Intranet/Labor/Bll/HistoryBll.cs
    startLine: 14
  assemblies:
  - Intranet.Labor.Bll
  namespace: Intranet.Labor.Bll
  summary: "\nClass representing the bll of the history\n"
  example: []
  syntax:
    content: 'public class HistoryBll : IHistoryBll'
    content.vb: >-
      Public Class HistoryBll

          Implements IHistoryBll
  inheritance:
  - System.Object
  implements:
  - Intranet.Labor.Definition.IHistoryBll
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Intranet.Labor.Bll.HistoryBll.TestSheetRepository
  commentId: P:Intranet.Labor.Bll.HistoryBll.TestSheetRepository
  id: TestSheetRepository
  parent: Intranet.Labor.Bll.HistoryBll
  langs:
  - csharp
  - vb
  name: TestSheetRepository
  nameWithType: HistoryBll.TestSheetRepository
  fullName: Intranet.Labor.Bll.HistoryBll.TestSheetRepository
  type: Property
  source:
    remote:
      path: .src/Intranet/Labor/Bll/HistoryBll.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: TestSheetRepository
    path: .src/Intranet/Labor/Bll/HistoryBll.cs
    startLine: 21
  assemblies:
  - Intranet.Labor.Bll
  namespace: Intranet.Labor.Bll
  summary: "\nTestSheetRepository\n"
  example: []
  syntax:
    content: public IGenericRepository<TestSheet> TestSheetRepository { get; set; }
    content.vb: Public Property TestSheetRepository As IGenericRepository(Of TestSheet)
    parameters: []
    return:
      type: Intranet.Common.IGenericRepository{Intranet.Labor.Model.labor.TestSheet}
  overload: Intranet.Labor.Bll.HistoryBll.TestSheetRepository*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Intranet.Labor.Bll.HistoryBll.GetTestSheets(System.String)
  commentId: M:Intranet.Labor.Bll.HistoryBll.GetTestSheets(System.String)
  id: GetTestSheets(System.String)
  parent: Intranet.Labor.Bll.HistoryBll
  langs:
  - csharp
  - vb
  name: GetTestSheets(String)
  nameWithType: HistoryBll.GetTestSheets(String)
  fullName: Intranet.Labor.Bll.HistoryBll.GetTestSheets(System.String)
  type: Method
  source:
    remote:
      path: .src/Intranet/Labor/Bll/HistoryBll.cs
      branch: f_doc
      repo: https://github.com/ClaudiaSaxer/Intranet.git
    id: GetTestSheets
    path: .src/Intranet/Labor/Bll/HistoryBll.cs
    startLine: 32
  assemblies:
  - Intranet.Labor.Bll
  namespace: Intranet.Labor.Bll
  summary: "\nGets all testsheet with the given faNr from the database\n"
  example: []
  syntax:
    content: public IEnumerable<TestSheet> GetTestSheets(string faNr)
    content.vb: Public Function GetTestSheets(faNr As String) As IEnumerable(Of TestSheet)
    parameters:
    - id: faNr
      type: System.String
      description: the faNr for the testsheets
    return:
      type: System.Collections.Generic.IEnumerable{Intranet.Labor.Model.labor.TestSheet}
      description: a list of testsheets
  overload: Intranet.Labor.Bll.HistoryBll.GetTestSheets*
  implements:
  - Intranet.Labor.Definition.IHistoryBll.GetTestSheets(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Intranet.Labor.Bll
  commentId: N:Intranet.Labor.Bll
  isExternal: false
  name: Intranet.Labor.Bll
  nameWithType: Intranet.Labor.Bll
  fullName: Intranet.Labor.Bll
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Intranet.Labor.Definition.IHistoryBll
  commentId: T:Intranet.Labor.Definition.IHistoryBll
  parent: Intranet.Labor.Definition
  isExternal: false
  name: IHistoryBll
  nameWithType: IHistoryBll
  fullName: Intranet.Labor.Definition.IHistoryBll
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Intranet.Labor.Definition
  commentId: N:Intranet.Labor.Definition
  isExternal: false
  name: Intranet.Labor.Definition
  nameWithType: Intranet.Labor.Definition
  fullName: Intranet.Labor.Definition
- uid: Intranet.Labor.Bll.HistoryBll.TestSheetRepository*
  commentId: Overload:Intranet.Labor.Bll.HistoryBll.TestSheetRepository
  isExternal: false
  name: TestSheetRepository
  nameWithType: HistoryBll.TestSheetRepository
  fullName: Intranet.Labor.Bll.HistoryBll.TestSheetRepository
- uid: Intranet.Common.IGenericRepository{Intranet.Labor.Model.labor.TestSheet}
  commentId: T:Intranet.Common.IGenericRepository{Intranet.Labor.Model.labor.TestSheet}
  parent: Intranet.Common
  definition: Intranet.Common.IGenericRepository`1
  name: IGenericRepository<TestSheet>
  nameWithType: IGenericRepository<TestSheet>
  fullName: Intranet.Common.IGenericRepository<Intranet.Labor.Model.labor.TestSheet>
  nameWithType.vb: IGenericRepository(Of TestSheet)
  fullname.vb: Intranet.Common.IGenericRepository(Of Intranet.Labor.Model.labor.TestSheet)
  name.vb: IGenericRepository(Of TestSheet)
  spec.csharp:
  - uid: Intranet.Common.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: Intranet.Common.IGenericRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: Intranet.Labor.Model.labor.TestSheet
    name: TestSheet
    nameWithType: TestSheet
    fullName: Intranet.Labor.Model.labor.TestSheet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Intranet.Common.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: Intranet.Common.IGenericRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Intranet.Labor.Model.labor.TestSheet
    name: TestSheet
    nameWithType: TestSheet
    fullName: Intranet.Labor.Model.labor.TestSheet
  - name: )
    nameWithType: )
    fullName: )
- uid: Intranet.Common.IGenericRepository`1
  commentId: T:Intranet.Common.IGenericRepository`1
  isExternal: false
  name: IGenericRepository<TEntity>
  nameWithType: IGenericRepository<TEntity>
  fullName: Intranet.Common.IGenericRepository<TEntity>
  nameWithType.vb: IGenericRepository(Of TEntity)
  fullname.vb: Intranet.Common.IGenericRepository(Of TEntity)
  name.vb: IGenericRepository(Of TEntity)
  spec.csharp:
  - uid: Intranet.Common.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: Intranet.Common.IGenericRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Intranet.Common.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: Intranet.Common.IGenericRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Intranet.Common
  commentId: N:Intranet.Common
  isExternal: false
  name: Intranet.Common
  nameWithType: Intranet.Common
  fullName: Intranet.Common
- uid: Intranet.Labor.Bll.HistoryBll.GetTestSheets*
  commentId: Overload:Intranet.Labor.Bll.HistoryBll.GetTestSheets
  isExternal: false
  name: GetTestSheets
  nameWithType: HistoryBll.GetTestSheets
  fullName: Intranet.Labor.Bll.HistoryBll.GetTestSheets
- uid: Intranet.Labor.Definition.IHistoryBll.GetTestSheets(System.String)
  commentId: M:Intranet.Labor.Definition.IHistoryBll.GetTestSheets(System.String)
  parent: Intranet.Labor.Definition.IHistoryBll
  isExternal: true
  name: GetTestSheets(String)
  nameWithType: IHistoryBll.GetTestSheets(String)
  fullName: Intranet.Labor.Definition.IHistoryBll.GetTestSheets(System.String)
  spec.csharp:
  - uid: Intranet.Labor.Definition.IHistoryBll.GetTestSheets(System.String)
    name: GetTestSheets
    nameWithType: IHistoryBll.GetTestSheets
    fullName: Intranet.Labor.Definition.IHistoryBll.GetTestSheets
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Intranet.Labor.Definition.IHistoryBll.GetTestSheets(System.String)
    name: GetTestSheets
    nameWithType: IHistoryBll.GetTestSheets
    fullName: Intranet.Labor.Definition.IHistoryBll.GetTestSheets
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Intranet.Labor.Model.labor.TestSheet}
  commentId: T:System.Collections.Generic.IEnumerable{Intranet.Labor.Model.labor.TestSheet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TestSheet>
  nameWithType: IEnumerable<TestSheet>
  fullName: System.Collections.Generic.IEnumerable<Intranet.Labor.Model.labor.TestSheet>
  nameWithType.vb: IEnumerable(Of TestSheet)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Intranet.Labor.Model.labor.TestSheet)
  name.vb: IEnumerable(Of TestSheet)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Intranet.Labor.Model.labor.TestSheet
    name: TestSheet
    nameWithType: TestSheet
    fullName: Intranet.Labor.Model.labor.TestSheet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Intranet.Labor.Model.labor.TestSheet
    name: TestSheet
    nameWithType: TestSheet
    fullName: Intranet.Labor.Model.labor.TestSheet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
