@using Intranet.Labor.Model.labor
@model Intranet.Labor.ViewModel.BabyDiaperRewetEditViewModel
@{
    ViewBag.Title = "Babywindeln Rewet - Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    <h2>Höschenwindeln - Retention-Test</h2>

    <div class="intigena-line"></div>

    @using (Html.BeginForm("Save", "BabyDiaperRewet", FormMethod.Post, new { @class = "form-horizontal", id = "submitForm" }))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.TestValueId, @Model.TestValueId);
        @Html.HiddenFor(m => m.TestSheetId, @Model.TestSheetId);
        <div class="form-group">
            <label class="col-sm-2 control-label">Testperson:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.TestPerson, new { placeholder = @Model.TestPerson, @class = "form-control", type = "text", @required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Produktions Code:</label>
            <label class="col-sm-2 control-label">
                @Html.HiddenFor(m => m.ProductionCode)
                @Model.ProductionCode
            </label>
            <div class="col-sm-1">
                @Html.TextBoxFor(m => m.ProductionCodeDay, new { placeholder = @Model.ProductionCodeDay, @class = "form-control", type = "text", @required = "required" })
                <p>
                    @Html.ValidationMessageFor(m => m.ProductionCodeDay)
                </p>

            </div>
            <label class="col-sm-1 control-label">
                /
            </label>
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.ProductionCodeTime, new { placeholder = @Model.ProductionCodeTime, @class = "form-control", type = "time", @required = "required" })
            </div>
        </div>
        <div class="intigena-line"></div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Gewicht [g]:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.DiaperWeight, new { placeholder = @Model.DiaperWeight, @class = "form-control", type = "text", @required = "required" })
            </div>
        </div>
        <div class="intigena-line"></div>

        <div class="form-group">
            <h4>Rewet (g)</h4>
            <label class="col-sm-2 control-label">140 ml:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.RewetAfter140, new { placeholder = @Model.RewetAfter140, @class = "form-control", type = "text", @required = "required" })
            </div>
            <label class="col-sm-2 control-label">210 ml:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.RewetAfter210, new { placeholder = @Model.RewetAfter210, @class = "form-control", type = "text", @required = "required" })
            </div>
            <label class="col-sm-2 control-label">Strike Through:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.StrikeThrough, new { placeholder = @Model.StrikeThrough, @class = "form-control", type = "text", @required = "required" })
            </div>
            <label class="col-sm-2 control-label">Verteilung [mm]:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Distribution, new { placeholder = @Model.Distribution, @class = "form-control", type = "text", @required = "required" })
            </div>
        </div>

        <div class="intigena-line"></div>

        <div class="form-group">
            @Html.HiddenFor(model => model.TestType)
            <h4>Penetration:
                <a class="btn btn-primary btn-lg" id="addPenetration" style="@(Model.TestType != TestTypeBabyDiaper.RewetAndPenetrationTime ? "display:block" : "display:none")">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </a>
                <a class="btn btn-danger btn-lg" id ="removePenetration" style="@(Model.TestType == TestTypeBabyDiaper.RewetAndPenetrationTime ? "display:block" : "display:none")" >
                    <span class="glyphicon glyphicon-trash"></span>
                </a>
            </h4>
            <div style="@(Model.TestType == TestTypeBabyDiaper.RewetAndPenetrationTime ? "display:block" : "display:none")" id="penetration-test">
                <label class="col-sm-2 control-label">Zugabe 1 [s]:</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor( m => m.PenetrationTime1, new { placeholder = @Model.PenetrationTime1, @class = "form-control", type = "text", @required = "required" } )
                </div>
                <label class="col-sm-2 control-label">Zugabe 2 [s]:</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor( m => m.PenetrationTime2, new { placeholder = @Model.PenetrationTime2, @class = "form-control", type = "text", @required = "required" } )
                </div>
                <label class="col-sm-2 control-label">Zugabe 3 [s]:</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor( m => m.PenetrationTime3, new { placeholder = @Model.PenetrationTime3, @class = "form-control", type = "text", @required = "required" } )
                </div>
                <label class="col-sm-2 control-label">Zugabe 4 [s]:</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor( m => m.PenetrationTime4, new { placeholder = @Model.PenetrationTime4, @class = "form-control", type = "text", @required = "required" } )
                </div>
            </div>
        </div>

        <div class="intigena-line"></div>

        <div class="form-group" id="notes">
            <h4>Notizen:</h4>
            @for (var i = 0; i < Model.NoteCodes.Count(); i++)
            {
                @Html.HiddenFor(model => Model.NoteCodes[i].Name)
                @Html.HiddenFor(model => Model.NoteCodes[i].ErrorId)
            }

            @if (Model.Notes != null)
            {
                for (var i = 0; i < Model.Notes.Count; i++)
                {
                    <div>
                        <label class="col-sm-2 control-label">Error Code:</label>
                        <div class="col-sm-10">
                            @Html.DropDownListFor(
                                m => m.Notes[i].ErrorCodeId,
                                new SelectList(Model.NoteCodes, "ErrorID", "Name", Model.Notes[i].ErrorCodeId),
                                "Error Code auswählen",
                                new { @class = "form-control" }
                            )
                        </div>
                        <label class="col-sm-2 control-label">Message:</label>
                        <div class="col-sm-10">
                            @Html.HiddenFor(m => m.Notes[i].Id)
                            @Html.HiddenFor(m => m.Notes[i].ErrorCodeId)
                            @Html.TextAreaFor(m => m.Notes[i]
                                                  .Message, new { @class = "form-control", type = "text" })
                        </div>
                    </div>
                }
            }
            <a class="btn btn-primary btn-lg" id="addNote">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            </a>
        </div>
        <button type="submit" value="Save" class="btn btn-primary btn-block" id="submitButton">Speichern</button>

        <script>
            function addNote() {
                document.getElementById('submitForm').action = '/Labor/BabyDiaperRewet/AddNote';
                document.getElementById('submitForm').submit();
            }
            function addPenetration() {
                document.getElementById('addPenetration').style.display = 'none';
                document.getElementById('removePenetration').style.display = 'block';
                document.getElementById('penetration-test').style.display = 'block';
                document.getElementById('TestType').value = 'RewetAndPenetrationTime';
            }
            function removePenetration() {
                document.getElementById('addPenetration').style.display = 'block';
                document.getElementById('removePenetration').style.display = 'none';
                document.getElementById('penetration-test').style.display = 'none';
                document.getElementById('TestType').value = 'Rewet';
            }
                $("#addNote").click(function () {
                    addNote();
                });
                $('#submitForm').submit(function () {
                    $(this).find(':submit').attr('disabled', 'disabled');
                });
                $("#addPenetration").click(function () {
                    addPenetration();
                });
                $("#removePenetration").click(function () {
                    removePenetration();
                });
        </script>
    }
</div>



